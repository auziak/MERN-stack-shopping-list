{"version":3,"sources":["components/AppNavbar.js","actions/itemActions.js","actions/types.js","components/SoppingList.js","components/ItemModal.js","reducers/itemReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["AppNavbar","state","isOpen","toggle","_this","setState","react_default","a","createElement","Navbar","color","dark","expand","className","Container","NavbarBrand","href","NavbarToggler","onClick","this","Collapse","navbar","Nav","NavItem","NavLink","Component","setItemsLoading","type","ShoppingList","onDeleteClick","id","props","deleteItem","getItems","_this2","items","item","ListGroup","TransitionGroup","map","_ref","_id","name","CSSTransition","key","timeout","classNames","ListGroupItem","Button","size","bind","connect","dispatch","axios","get","then","res","payload","data","delete","concat","ItemModal","modal","onChange","e","Object","defineProperty","target","value","onSubmit","preventDefault","newItem","addItem","style","marginBottom","Modal","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","placeholder","marginTop","block","post","initialState","loading","combineReducers","arguments","length","undefined","action","objectSpread","filter","toConsumableArray","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","apply","store","createStore","rootReducer","App","es","components_AppNavbar","components_ItemModal","SoppingList","Boolean","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3800acd1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  NavLink,\n  Container\n} from \"reactstrap\";\n\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                <NavItem>\n                  <NavLink href=\"https://github.com/auziak\">GitHub</NavLink>\n                </NavItem>\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nexport default AppNavbar;\n","import axios from \"axios\";\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from \"./types\";\n\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios\n    .get(\"api/items\")\n    .then(res => dispatch({ type: GET_ITEMS, payload: res.data }));\n};\n\nexport const deleteItem = id => dispatch => {\n  axios\n    .delete(`/api/items/${id}`)\n    .then(res => dispatch({ type: DELETE_ITEM, payload: id }));\n};\n\nexport const addItem = item => dispatch => {\n  axios.post(\"/api/items\", item).then(res =>\n    dispatch({\n      type: ADD_ITEM,\n      payload: res.data\n    })\n  );\n};\n\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};\n","export const GET_ITEMS = \"GET_ITEMS\";\nexport const ADD_ITEM = \"ADD_ITEM\";\nexport const DELETE_ITEM = \"DELETE_ITEM\";\nexport const ITEMS_LOADING = \"ITEMS_LOADING\";\n","import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem, Button } from \"reactstrap\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport { getItems, deleteItem } from \"../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass ShoppingList extends Component {\n  componentDidMount() {\n    this.props.getItems();\n  }\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n  };\n  render() {\n    const { items } = this.props.item;\n    return (\n      <ListGroup>\n        <TransitionGroup className=\"shopping-list\">\n          {items.map(({ _id, name }) => (\n            <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n              <ListGroupItem>\n                <Button\n                  className=\"remove-btn\"\n                  color=\"danger\"\n                  size=\"sm\"\n                  onClick={this.onDeleteClick.bind(this, _id)}\n                  // onClick={() => {\n                  //   this.props.deleteItem(_id);\n                  // }}\n                >\n                  &times;\n                </Button>\n                &nbsp; {name}\n              </ListGroupItem>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </ListGroup>\n    );\n  }\n}\n\nShoppingList.propTypes = {\n  getItems: PropTypes.func.isRequired,\n  item: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  item: state.item\n});\n\nexport default connect(\n  mapStateToProps,\n  { getItems, deleteItem }\n)(ShoppingList);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../actions/itemActions\";\n\nclass ItemModal extends Component {\n  state = {\n    modal: false,\n    name: \"\"\n  };\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newItem = {\n      name: this.state.name\n    };\n\n    // Add item via addItem action\n    this.props.addItem(newItem);\n\n    // Close Modal\n    this.toggle();\n  };\n\n  render() {\n    return (\n      <div>\n        <Button\n          color=\"dark\"\n          style={{ marginBottom: \"2rem\" }}\n          onClick={this.toggle}\n        >\n          Add Item\n        </Button>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"item\">Item</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"item\"\n                  placeholder=\"Add shopping item\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Add Item\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.items\n});\n\nexport default connect(\n  mapStateToProps,\n  { addItem }\n)(ItemModal);\n","import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [...state.items, action.payload]\n      };\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: !state.loading\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from \"redux\";\nimport itemReducer from \"./itemReducer\";\n\nexport default combineReducers({\n  item: itemReducer\n});\n","import { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\nconst store = createStore(rootReducer, initialState, enhancer);\n\nexport default store;\n","import React from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nimport AppNavbar from \"./components/AppNavbar\";\nimport ShoppingList from \"./components/SoppingList\";\nimport ItemModal from \"./components/ItemModal\";\nimport { Container } from \"reactstrap\";\n\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <AppNavbar />\n        <Container>\n          <ItemModal />\n          <ShoppingList />\n        </Container>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}