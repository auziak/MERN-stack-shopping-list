{"version":3,"sources":["actions/errorActions.js","actions/types.js","actions/authActions.js","components/auth/RegisterModal.js","components/auth/LoginModal.js","components/auth/Logout.js","components/AppNavbar.js","actions/itemActions.js","components/SoppingList.js","components/ItemModal.js","reducers/itemReducer.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/index.js","store.js","App.js","serviceWorker.js","index.js"],"names":["returnErrors","msg","status","type","payload","id","arguments","length","undefined","clearErrors","tokenConfig","getState","token","auth","config","headers","Content-type","RegisterModal","state","modal","name","email","password","toggle","_this","props","setState","onChange","e","Object","defineProperty","target","value","onSubmit","preventDefault","_this$state","newUser","register","prevProps","_this$props","this","error","isAuthenticated","react_default","a","createElement","NavLink","onClick","href","Modal","isOpen","ModalHeader","ModalBody","Alert","color","Form","FormGroup","Label","for","Input","placeholder","className","Button","style","marginTop","block","Component","connect","_ref","dispatch","body","JSON","stringify","axios","post","then","res","data","catch","err","response","LoginModal","user","login","_ref2","Logout","_Component","classCallCheck","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","react","logout","AppNavbar","_this$props$auth","userLinks","NavItem","concat","auth_Logout","guestLinks","auth_LoginModal","auth_RegisterModal","Navbar","dark","expand","Container","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","setItemsLoading","ShoppingList","onDeleteClick","deleteItem","getItems","_this2","items","item","ListGroup","TransitionGroup","map","_id","CSSTransition","timeout","classNames","ListGroupItem","size","bind","get","delete","ItemModal","newItem","addItem","marginBottom","initialState","loading","localStorage","getItem","isLoading","combineReducers","action","objectSpread","filter","toConsumableArray","setItem","removeItem","middleware","thunk","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","rootReducer","App","es","components_AppNavbar","components_ItemModal","SoppingList","React","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6cfee36.chunk.js","sourcesContent":["import { GET_ERRORS, CLEAR_ERRORS } from './types';\n\n// RETURN ERRORS\nexport const returnErrors = (msg, status, id = null) => {\n  return {\n    type: GET_ERRORS,\n    payload: {\n      msg,\n      status,\n      id\n    }\n  };\n};\n\n// CLEAR ERRORS\nexport const clearErrors = () => {\n  return {\n    type: CLEAR_ERRORS\n  };\n};\n","export const GET_ITEMS = 'GET_ITEMS';\nexport const ADD_ITEM = 'ADD_ITEM';\nexport const DELETE_ITEM = 'DELETE_ITEM';\nexport const ITEMS_LOADING = 'ITEMS_LOADING';\nexport const USER_LOADING = 'USER_LOADING';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const GET_ERRORS = 'GET_ERRORS';\nexport const CLEAR_ERRORS = 'CLEAR_ERRORS';\n","import axios from 'axios';\nimport { returnErrors } from './errorActions';\n\nimport {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from './types';\n\n// Check token and load user\nexport const loadUser = () => (dispatch, getState) => {\n  // User loading\n  dispatch({ type: USER_LOADING });\n\n  axios\n    .get('/api/auth/user', tokenConfig(getState))\n    .then(res => dispatch({ type: USER_LOADED, payload: res.data }))\n    .catch(err => {\n      dispatch(returnErrors(err.response.data, err.response.status));\n      dispatch({ type: AUTH_ERROR });\n    });\n};\n\n// Register User\nexport const register = ({ name, email, password }) => dispatch => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ name, email, password });\n\n  axios\n    .post('/api/users', body, config)\n    .then(res =>\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'REGISTER_FAIL')\n      );\n      dispatch({ type: REGISTER_FAIL });\n    });\n};\n\n// Login User\nexport const login = ({ email, password }) => dispatch => {\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // Request body\n  const body = JSON.stringify({ email, password });\n\n  axios\n    .post('/api/auth', body, config)\n    .then(res =>\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      })\n    )\n    .catch(err => {\n      dispatch(\n        returnErrors(err.response.data, err.response.status, 'LOGIN_FAIL')\n      );\n      dispatch({ type: LOGIN_FAIL });\n    });\n};\n\n// Logout User\nexport const logout = () => {\n  return {\n    type: LOGOUT_SUCCESS\n  };\n};\n\n// Setup config/headers and token\nexport const tokenConfig = getState => {\n  // Get token from local storage\n  const token = getState().auth.token;\n\n  //Headers\n  const config = {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  };\n\n  // If token? add to headers\n  if (token) {\n    config.headers['x-auth-token'] = token;\n  }\n\n  return config;\n};\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { register } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\n\nclass RegisterModal extends Component {\n  state = {\n    modal: false,\n    name: '',\n    email: '',\n    password: '',\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    register: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'REGISTER_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    this.props.clearErrors();\n    this.setState({ modal: !this.state.modal });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { name, email, password } = this.state;\n\n    const newUser = {\n      name,\n      email,\n      password\n    };\n\n    // Attempt to register\n    this.props.register(newUser);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href=\"#\">\n          Register\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Register</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"name\">Name</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Enter your email\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                  Register\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { register, clearErrors }\n)(RegisterModal);\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input,\n  NavLink,\n  Alert\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { login } from '../../actions/authActions';\nimport { clearErrors } from '../../actions/errorActions';\nimport PropTypes from 'prop-types';\n\nclass LoginModal extends Component {\n  state = {\n    modal: false,\n    email: '',\n    password: '',\n    msg: null\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool,\n    error: PropTypes.object.isRequired,\n    login: PropTypes.func.isRequired,\n    clearErrors: PropTypes.func.isRequired\n  };\n\n  componentDidUpdate(prevProps) {\n    const { error, isAuthenticated } = this.props;\n    if (error !== prevProps.error) {\n      // Check for register error\n      if (error.id === 'LOGIN_FAIL') {\n        this.setState({ msg: error.msg.msg });\n      } else {\n        this.setState({ msg: null });\n      }\n    }\n\n    // If authenticated close modal\n    if (this.state.modal) {\n      if (isAuthenticated) {\n        this.toggle();\n      }\n    }\n  }\n\n  toggle = () => {\n    this.props.clearErrors();\n    this.setState({ modal: !this.state.modal });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n\n    const user = {\n      email,\n      password\n    };\n\n    // Attemt to login\n    this.props.login(user);\n  };\n\n  render() {\n    return (\n      <div>\n        <NavLink onClick={this.toggle} href=\"#\">\n          Login\n        </NavLink>\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Login</ModalHeader>\n          <ModalBody>\n            {this.state.msg ? (\n              <Alert color=\"danger\">{this.state.msg}</Alert>\n            ) : null}\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"email\">Email</Label>\n                <Input\n                  type=\"email\"\n                  name=\"email\"\n                  id=\"email\"\n                  placeholder=\"Enter your email\"\n                  className=\"mb-3\"\n                  onChange={this.onChange}\n                />\n                <Label for=\"password\">Password</Label>\n                <Input\n                  type=\"password\"\n                  name=\"password\"\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: '2rem' }} block>\n                  Login\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  error: state.error\n});\n\nexport default connect(\n  mapStateToProps,\n  { login, clearErrors }\n)(LoginModal);\n","import React, { Component, Fragment } from 'react';\nimport { NavLink } from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { logout } from '../../actions/authActions';\nimport PropTypes from 'prop-types';\n\nexport class Logout extends Component {\n  static propTypes = {\n    logout: PropTypes.func.isRequired\n  };\n  render() {\n    return (\n      <Fragment>\n        <NavLink onClick={this.props.logout} href=\"#\">\n          Logout\n        </NavLink>\n      </Fragment>\n    );\n  }\n}\n\nexport default connect(\n  null,\n  { logout }\n)(Logout);\n","import React, { Component, Fragment } from 'react';\nimport {\n  Collapse,\n  Navbar,\n  NavbarToggler,\n  NavbarBrand,\n  Nav,\n  NavItem,\n  Container\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport RegisterModal from './auth/RegisterModal';\nimport LoginModal from './auth/LoginModal';\nimport Logout from './auth/Logout';\n\nclass AppNavbar extends Component {\n  state = {\n    isOpen: false\n  };\n\n  static propTypes = {\n    auth: PropTypes.object.isRequired\n  };\n\n  toggle = () => {\n    this.setState({\n      isOpen: !this.state.isOpen\n    });\n  };\n\n  render() {\n    const { isAuthenticated, user } = this.props.auth;\n\n    const userLinks = (\n      <Fragment>\n        <NavItem>\n          <span className=\"navbar-text mr-3\">\n            <strong>{user ? `Welcome ${user.name}` : null}</strong>\n          </span>\n        </NavItem>\n        <NavItem>\n          <Logout />\n        </NavItem>\n      </Fragment>\n    );\n\n    const guestLinks = (\n      <Fragment>\n        <NavItem>\n          <LoginModal />\n        </NavItem>\n        <NavItem>\n          <RegisterModal />\n        </NavItem>\n      </Fragment>\n    );\n\n    return (\n      <div>\n        <Navbar color=\"dark\" dark expand=\"sm\" className=\"mb-5\">\n          <Container>\n            <NavbarBrand href=\"/\">Shopping List</NavbarBrand>\n            <NavbarToggler onClick={this.toggle} />\n            <Collapse isOpen={this.state.isOpen} navbar>\n              <Nav className=\"ml-auto\" navbar>\n                {isAuthenticated ? userLinks : guestLinks}\n              </Nav>\n            </Collapse>\n          </Container>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ auth }) => ({\n  auth\n});\n\nexport default connect(\n  mapStateToProps,\n  null\n)(AppNavbar);\n","import axios from 'axios';\nimport { GET_ITEMS, ADD_ITEM, DELETE_ITEM, ITEMS_LOADING } from './types';\nimport { tokenConfig } from './authActions';\nimport { returnErrors } from './errorActions';\n\nexport const getItems = () => dispatch => {\n  dispatch(setItemsLoading());\n  axios\n    .get('api/items')\n    .then(res => dispatch({ type: GET_ITEMS, payload: res.data }))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const deleteItem = id => (dispatch, getState) => {\n  axios\n    .delete(`/api/items/${id}`, tokenConfig(getState))\n    .then(res => dispatch({ type: DELETE_ITEM, payload: id }))\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const addItem = item => (dispatch, getState) => {\n  axios\n    .post('/api/items', item, tokenConfig(getState))\n    .then(res =>\n      dispatch({\n        type: ADD_ITEM,\n        payload: res.data\n      })\n    )\n    .catch(err =>\n      dispatch(returnErrors(err.response.data, err.response.status))\n    );\n};\n\nexport const setItemsLoading = () => {\n  return {\n    type: ITEMS_LOADING\n  };\n};\n","import React, { Component } from 'react';\nimport { ListGroup, ListGroupItem, Button } from 'reactstrap';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport { getItems, deleteItem } from '../actions/itemActions';\nimport PropTypes from 'prop-types';\n\nclass ShoppingList extends Component {\n  static propTypes = {\n    getItems: PropTypes.func.isRequired,\n    item: PropTypes.object.isRequired,\n    isAuthenticated: PropTypes.bool\n  };\n\n  componentDidMount() {\n    this.props.getItems();\n  }\n\n  onDeleteClick = id => {\n    this.props.deleteItem(id);\n  };\n\n  render() {\n    const { items } = this.props.item;\n    return (\n      <ListGroup>\n        <TransitionGroup className=\"shopping-list\">\n          {items.map(({ _id, name }) => (\n            <CSSTransition key={_id} timeout={500} classNames=\"fade\">\n              <ListGroupItem>\n                {this.props.isAuthenticated ? (\n                  <Button\n                    className=\"remove-btn\"\n                    color=\"danger\"\n                    size=\"sm\"\n                    onClick={this.onDeleteClick.bind(this, _id)}\n                  >\n                    &times;\n                  </Button>\n                ) : null}\n                &nbsp; {name}\n              </ListGroupItem>\n            </CSSTransition>\n          ))}\n        </TransitionGroup>\n      </ListGroup>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.item,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(\n  mapStateToProps,\n  { getItems, deleteItem }\n)(ShoppingList);\n","import React, { Component } from \"react\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  Form,\n  FormGroup,\n  Label,\n  Input\n} from \"reactstrap\";\nimport { connect } from \"react-redux\";\nimport { addItem } from \"../actions/itemActions\";\nimport PropTypes from \"prop-types\";\n\nclass ItemModal extends Component {\n  state = {\n    modal: false,\n    name: \"\"\n  };\n\n  static propTypes = {\n    isAuthenticated: PropTypes.bool\n  };\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n\n  onChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n\n    const newItem = {\n      name: this.state.name\n    };\n\n    // Add item via addItem action\n    this.props.addItem(newItem);\n\n    // Close Modal\n    this.toggle();\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.isAuthenticated ? (\n          <Button\n            color=\"dark\"\n            style={{ marginBottom: \"2rem\" }}\n            onClick={this.toggle}\n          >\n            Add Item\n          </Button>\n        ) : (\n          <h4 className=\"mb-3 ml-4\">Please log in to manage items</h4>\n        )}\n\n        <Modal isOpen={this.state.modal} toggle={this.toggle}>\n          <ModalHeader toggle={this.toggle}>Add To Shopping List</ModalHeader>\n          <ModalBody>\n            <Form onSubmit={this.onSubmit}>\n              <FormGroup>\n                <Label for=\"item\">Item</Label>\n                <Input\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"item\"\n                  placeholder=\"Add shopping item\"\n                  onChange={this.onChange}\n                />\n                <Button color=\"dark\" style={{ marginTop: \"2rem\" }} block>\n                  Add Item\n                </Button>\n              </FormGroup>\n            </Form>\n          </ModalBody>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  item: state.items,\n  isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { addItem })(ItemModal);\n","import {\n  GET_ITEMS,\n  ADD_ITEM,\n  DELETE_ITEM,\n  ITEMS_LOADING\n} from \"../actions/types\";\n\nconst initialState = {\n  items: [],\n  loading: false\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ITEMS:\n      return {\n        ...state,\n        items: action.payload,\n        loading: false\n      };\n    case DELETE_ITEM:\n      return {\n        ...state,\n        items: state.items.filter(item => item._id !== action.payload)\n      };\n    case ADD_ITEM:\n      return {\n        ...state,\n        items: [...state.items, action.payload]\n      };\n    case ITEMS_LOADING:\n      return {\n        ...state,\n        loading: !state.loading\n      };\n    default:\n      return state;\n  }\n}\n","import {\n  USER_LOADED,\n  USER_LOADING,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT_SUCCESS,\n  REGISTER_SUCCESS,\n  REGISTER_FAIL\n} from \"../actions/types\";\n\nconst initialState = {\n  token: localStorage.getItem(\"token\"),\n  isAuthenticated: false,\n  isLoading: false,\n  user: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case USER_LOADING:\n      return {\n        ...state,\n        isLoading: true\n      };\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        isLoading: false,\n        user: action.payload\n      };\n    case LOGIN_SUCCESS:\n    case REGISTER_SUCCESS:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        ...action.payload,\n        isAuthenticated: true,\n        isLoading: false\n      };\n    case AUTH_ERROR:\n    case LOGIN_FAIL:\n    case LOGOUT_SUCCESS:\n    case REGISTER_FAIL:\n      localStorage.removeItem(\"token\");\n      return {\n        ...state,\n        token: null,\n        user: null,\n        isAuthenticated: false,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n}\n","import { GET_ERRORS, CLEAR_ERRORS } from '../actions/types';\n\nconst initialState = {\n  msg: {},\n  status: null,\n  id: null\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return {\n        msg: action.payload.msg,\n        status: action.payload.status,\n        id: action.payload.id\n      };\n    case CLEAR_ERRORS:\n      return {\n        msg: {},\n        status: null,\n        id: null\n      };\n    default:\n      return state;\n  }\n}\n","import { combineReducers } from 'redux';\nimport itemReducer from './itemReducer';\nimport authReducer from './authReducer';\nimport errorReducer from './errorReducer';\n\nexport default combineReducers({\n  item: itemReducer,\n  auth: authReducer,\n  error: errorReducer\n});\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst enhancer = composeEnhancers(applyMiddleware(...middleware));\n\nconst store = createStore(rootReducer, initialState, enhancer);\n\nexport default store;\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\n\nimport AppNavbar from './components/AppNavbar';\nimport ShoppingList from './components/SoppingList';\nimport ItemModal from './components/ItemModal';\nimport { Container } from 'reactstrap';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/authActions';\n\nclass App extends React.Component {\n  componentDidMount() {\n    store.dispatch(loadUser());\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <div className=\"App\">\n          <AppNavbar />\n          <Container>\n            <ItemModal />\n            <ShoppingList />\n          </Container>\n        </div>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}